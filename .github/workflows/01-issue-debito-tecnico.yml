name: Comment on new issue
on:
  issues:
    types: [opened]

permissions:
  issues: write  # Concede permissão de escrita para issues

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      - name: Convert issue body to markdown and post a comment
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = context.issue.number;
            const issueBody = context.payload.issue.body;

            function extractField(body, label) {
              const regex = new RegExp(`${label}\\s*\\n([\\s\\S]*?)(?=\\n\\S|$)`, 'i');
              const match = body.match(regex);
              return match ? match[1].trim() : 'Não fornecido';
            }

            function extractTextareaContent(body, label) {
              const regex = new RegExp(`${label}\\s*\\n([\\s\\S]*)`, 'i');
              const match = body.match(regex);
              return match ? match[1].trim() : 'Não fornecido';
            }

            const tipoDebitoTecnico = extractField(issueBody, 'Tipo de Débito Técnico');
            const pontuacao = extractField(issueBody, 'Pontuação');
            const linkRepositorio = extractField(issueBody, 'Link do Repositório');
            const notasAdicionais = extractTextareaContent(issueBody, 'Notas Adicionais');

            const formattedLink = linkRepositorio.startsWith('http://') || linkRepositorio.startsWith('https://') 
              ? linkRepositorio 
              : `https://${linkRepositorio}`;

            const markdownContent = `
            ## AS IS (Situação Atual)
            **Descrição:**
            Use este campo para descrever o estado atual do débito técnico identificado.
            
            ---
            
            ## TO BE (Situação Desejada)
            **Descrição:**
            Neste campo, descreva a solução proposta ou o estado desejado após a resolução do débito técnico.
            
            ---
            
            ## Definition of Ready (DoR)
            ### Backend:
            1. Requisitos funcionais e não funcionais claramente definidos e documentados:
              - [ ] Sim
              - [ ] Não se aplica
            2. Critérios de aceitação definidos e validados com o Product Owner:
              - [ ] Sim
              - [ ] Não se aplica
            3. Especificações de API ou design foram revisados e aprovados:
              - [ ] Sim
              - [ ] Não se aplica
            4. Dependências externas identificadas e validadas:
              - [ ] Sim
              - [ ] Não se aplica
            5. Estimativa de esforço foi validada pela equipe:
              - [ ] Sim
              - [ ] Não se aplica
            6. Acesso aos recursos necessários foi providenciado (ambientes, bibliotecas, etc.):
              - [ ] Sim
              - [ ] Não se aplica
            
            ### Frontend:
            1. Wireframes e protótipos revisados e aprovados pelo time de design:
              - [ ] Sim
              - [ ] Não se aplica
            2. Especificações de interações e animações definidas:
              - [ ] Sim
              - [ ] Não se aplica
            3. Acesso às bibliotecas de componentes foi garantido:
              - [ ] Sim
              - [ ] Não se aplica
            4. Definições de responsividade e suporte a navegadores acordadas:
              - [ ] Sim
              - [ ] Não se aplica
            5. Critérios de acessibilidade discutidos e validados:
              - [ ] Sim
              - [ ] Não se aplica
            
            ---
            
            ## Definition of Done (DoD)
            ### Backend:
            1. Código desenvolvido, revisado e integrado ao repositório principal:
              - [ ] Sim
              - [ ] Não se aplica
            2. Testes unitários e de integração escritos e passando:
              - [ ] Sim
              - [ ] Não se aplica
            3. Logs e monitoramento configurados:
              - [ ] Sim
              - [ ] Não se aplica
            4. Documentação da API (como Swagger) atualizada:
              - [ ] Sim
              - [ ] Não se aplica
            5. Código deployado em ambiente de staging e testado com sucesso:
              - [ ] Sim
              - [ ] Não se aplica
            6. Nenhum bug crítico encontrado durante os testes:
              - [ ] Sim
              - [ ] Não se aplica
            
            ### Frontend:
            1. Código desenvolvido, revisado e integrado ao repositório principal:
              - [ ] Sim
              - [ ] Não se aplica
            2. Testes de compatibilidade em diferentes navegadores e dispositivos realizados:
              - [ ] Sim
              - [ ] Não se aplica
            3. Testes unitários e de interface estão passando:
              - [ ] Sim
              - [ ] Não se aplica
            4. Layout responsivo e acessibilidade revisados e aprovados:
              - [ ] Sim
              - [ ] Não se aplica
            5. Versão deployada em staging e validada por stakeholders:
              - [ ] Sim
              - [ ] Não se aplica
            
            ---
            
            ## Dados Gerais
            - **Tipo de Débito Técnico:** ${tipoDebitoTecnico}
            - **Pontuação:** ${pontuacao}
            - **Link do Repositório:** [${formattedLink}](${formattedLink})
            
            ---
            ## Observações
            ${notasAdicionais}
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: markdownContent
            });
